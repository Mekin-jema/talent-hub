// ============================================================
// ðŸŒŸ Prisma Schema for Talent Hub Job Portal
// This schema defines the core data models for the application
// Users can post jobs, apply to jobs, and manage job listings
// ============================================================

// ðŸ”§ Prisma Client Generator (Auto-generates TypeScript client)
generator client {
  provider = "prisma-client-js"
}

// ðŸ’¾ Database Configuration
datasource db {
  provider = "sqlite"         // Using SQLite (good for dev/testing)
  url      = "file:./job.db"  // Database file location
}

// ============================================================
// ðŸ‘¤ USER MODEL
// Represents anyone using the platform (Job Seekers or Employers)
// ============================================================
model User {
  id          String   @id @default(cuid())     // Unique user ID
  email       String   @unique                  // User email (must be unique)
  password    String                            // Hashed password
  fullName    String                            // Full name of the user
  role        Role     @default(DEVELOPER)      // User role (Dev, Employer, Admin)
  phone       String?                           // Optional phone number
  location    String?                           // Optional location
  linkedIn    String?                           // Optional LinkedIn profile
  portfolio   String?                           // Optional portfolio/website
  createdAt   DateTime @default(now())          // When the user was created
  updatedAt   DateTime @updatedAt               // Auto-updated timestamp

  // Relationships
  jobs        Job[]          @relation("JobPoster")  // Jobs created by this user
  applications Application[]                         // Applications submitted

  @@map("users")  // Map to "users" table
}

// ============================================================
// ðŸ’¼ JOB MODEL
// Represents a job posting created by an employer
// ============================================================
model Job {
  id               String   @id @default(cuid())     // Unique job ID
  title            String                            // Job title
  type             String?                           // e.g. Full-time, Part-time
  description      String?                           // Detailed job description
  requirements     Json?     // ["3+ years React", "TypeScript"] as JSON array
  responsibilities Json?     // ["Build APIs", "Write tests"] as JSON array
  location         String?                           // Job location (Remote/Onsite)
  aboutCompany     String?                           // Info about hiring company
  logo             String?                           // Company logo URL
  salary           String?                           // Salary range ("$4000-$6000")
  posted           DateTime? @default(now())        // When job was posted
  updatedAt        DateTime @updatedAt               // Last updated timestamp
  category         String?                           // e.g. Engineering, Marketing
  featured         Boolean @default(false)           // Highlighted job or not

  // Relationships
  skills           Skill[]                           // Required skills
  createdBy        User      @relation("JobPoster", fields: [userId], references: [id])  
  userId           String                             // Employer who created the job
  applications     Application[]                      // Applications for this job

  @@map("jobs")  // Map to "jobs" table
}

// ============================================================
// ðŸ“„ APPLICATION MODEL
// Represents a job application submitted by a user
// ============================================================
model Application {
  id          String   @id @default(cuid())          // Unique application ID
  status      ApplicationStatus @default(APPLIED)   // Current status of application
  createdAt   DateTime @default(now())              // When the application was created
  updatedAt   DateTime @updatedAt                   // Last updated timestamp
  resumeUrl   String?  @default("") 
  coverLetter String?    @default("")                            // Optional cover letter
  salaryExpectation String?  @default("")                     // Optional salary expectation
  noticePeriod String?  @default("")                          // Optional notice period

  // Relationships
  job         Job      @relation(fields: [jobId], references: [id])   // Job applied for
  jobId       String
  applicant   User     @relation(fields: [userId], references: [id])  // Applicant (User)
  userId      String

  @@unique([userId, jobId]) // Prevent duplicate applications per job
  @@map("applications")     // Map to "applications" table
}

// ============================================================
// ðŸ›  SKILL MODEL
// Represents skills required for a job
// ============================================================
model Skill {
  id     String @id @default(cuid())    // Unique skill ID
  name   String                         // Skill name (e.g. React, Node.js)
  jobId  String                         // The job this skill belongs to
  job    Job @relation(fields: [jobId], references: [id])
}

// ============================================================
// ðŸŽ­ ENUMS
// Enums help keep roles and statuses clean and consistent
// ============================================================
enum Role {
  DEVELOPER   // Default user role (Job Seeker)
  EMPLOYER    // Can post jobs
  ADMIN       // Platform admin
}

enum ApplicationStatus {
  APPLIED       // Initial state
  SHORTLISTED   // Candidate shortlisted
  REJECTED      // Candidate rejected
}
